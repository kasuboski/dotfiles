name: Build and Push DevContainer

on:
  push:
    branches: [main]
    paths:
      - "devcontainer.nix"
      - "flake.nix"
      - "flake.lock"
      - "users/**"
      - "hosts/**"
  pull_request:
    branches: [main]
    paths:
      - "devcontainer.nix"
      - "flake.nix"
      - "flake.lock"
      - "users/**"
      - "hosts/**"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: kasuboski/devcontainer

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@c723f3a885e3f1d866d91f4f0c33dd44b1fc7c60 # v18
        with:
          extra-conf: |
            trusted-public-keys = nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            trusted-substituters = https://nix-community.cachix.org https://cache.nixos.org
            substituters = https://nix-community.cachix.org https://cache.nixos.org

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build devcontainer script
        run: |
          nix build .#devContainer

      - name: Build and load base image
        run: |
          # Run the build script which loads the base image into Docker
          ./result/bin/buildImage

      - name: Tag and push image
        if: github.event_name != 'pull_request'
        run: |
          # Tag the locally built image with the registry tags
          for tag in $(echo '${{ steps.meta.outputs.tags }}' | tr '\n' ' '); do
            docker tag dev:latest "$tag"
            docker push "$tag"
          done

      - name: Build image for PR (no push)
        if: github.event_name == 'pull_request'
        run: |
          echo "Built devcontainer image successfully (PR - not pushing)"
          docker images | grep dev
