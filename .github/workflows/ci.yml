name: "CI"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: ubuntu-latest
            system: x86_64-linux
          - runner: ubuntu-24.04-arm
            system: aarch64-linux
          - runner: macos-13
            system: x86_64-darwin
          - runner: macos-14
            system: aarch64-darwin

    runs-on: ${{ matrix.runner }}
    name: Build ${{ matrix.system }}

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@c723f3a885e3f1d866d91f4f0c33dd44b1fc7c60 # v18
        with:
          extra-conf: |
            trusted-public-keys = nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            trusted-substituters = https://nix-community.cachix.org https://cache.nixos.org
            substituters = https://nix-community.cachix.org https://cache.nixos.org

      - name: Setup Cachix
        uses: cachix/cachix-action@ad2ddac53f961de1989924296a1f236fcfbaa4fc # v15
        with:
          name: kasuboski-dotfiles
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Check format
        run: |
          nix fmt .
          if ! git diff --exit-code; then
            echo "Code is not formatted. Run 'nix fmt .' and commit the changes."
            exit 1
          fi

      - name: Validate flake structure
        run: |
          # Check cross-platform outputs first
          nix eval --json .#overlays --apply 'builtins.attrNames' >/dev/null
          nix eval --json .#devShells.${{ matrix.system }} --apply 'builtins.attrNames' >/dev/null
          nix eval --json .#formatter.${{ matrix.system }} >/dev/null
          nix flake show --all-systems >/dev/null

      - name: Build platform-specific configurations
        run: |
          case "${{ matrix.system }}" in
            x86_64-linux)
              echo "Building NixOS configurations for x86_64-linux..."
              nix build .#nixosConfigurations.fettig.config.system.build.toplevel --no-link
              nix build .#nixosConfigurations.ziel.config.system.build.toplevel --no-link
              nix build .#nixosConfigurations.nixosx86.config.system.build.toplevel --no-link
              nix build .#nixosConfigurations.live.config.system.build.toplevel --no-link
              nix build .#homeConfigurations."josh@x86".activationPackage --no-link
              ;;
            aarch64-linux)
              echo "Building NixOS configurations for aarch64-linux..."
              nix build .#nixosConfigurations.nixos.config.system.build.toplevel --no-link
              nix build .#homeConfigurations."josh@aarch64".activationPackage --no-link
              ;;
            x86_64-darwin)
              echo "Building Darwin configurations for x86_64-darwin..."
              nix build .#darwinConfigurations.work-mac.system --no-link
              nix build .#homeConfigurations."josh@x86".activationPackage --no-link
              ;;
            aarch64-darwin)
              echo "Building Darwin configurations for aarch64-darwin..."
              nix build .#darwinConfigurations.personal-mac.system --no-link
              nix build .#homeConfigurations."josh@aarch64".activationPackage --no-link
              ;;
          esac

      - name: Build packages and dev shell
        run: |
          nix develop --command echo "Dev shell works"
